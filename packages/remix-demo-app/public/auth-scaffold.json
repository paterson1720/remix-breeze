[
  {
    "fileName": "_app.admin-dashboard.tsx",
    "path": "/app/routes/_app.admin-dashboard.tsx",
    "content": "import type { ActionFunctionArgs, MetaFunction } from \"@remix-run/node\";\nimport auth from \"../auth.server\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Reset Password Email Sent\" },\n    { name: \"description\", content: \"Welcome to Remix!\" },\n  ];\n};\n\nexport async function loader({ request }: ActionFunctionArgs) {\n  const session = await auth.requireAuth(request, {\n    withRoles: [\"admin\"],\n    ifNotAuthenticatedRedirectTo: \"/auth/login\",\n    ifNotAuthorizedRedirectTo: \"/auth/unauthorized\",\n  });\n  return { user: session.get(\"user\")! };\n}\n\nexport default function AdminPage() {\n  return (\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n              Admin Dashboard\n            </h1>\n            <p className=\"space-y-4 md:space-y-6\">\n              <span className=\"text-gray-900 dark:text-white\">\n                You are logged in as an admin and viewing the admin dashboard.\n              </span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
  },
  {
    "fileName": "_app.dashboard.tsx",
    "path": "/app/routes/_app.dashboard.tsx",
    "content": "import type { ActionFunctionArgs, MetaFunction } from \"@remix-run/node\";\nimport auth from \"../auth.server\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Reset Password Email Sent\" },\n    { name: \"description\", content: \"Welcome to Remix!\" },\n  ];\n};\n\nexport async function loader({ request }: ActionFunctionArgs) {\n  const session = await auth.requireAuth(request, {\n    ifNotAuthenticatedRedirectTo: \"/auth/login\",\n  });\n  return { user: session.get(\"user\")! };\n}\n\nexport default function Dashboard() {\n  const { user } = useLoaderData<typeof loader>();\n\n  return (\n    <section className=\"bg-gray-50 pt-24 dark:bg-gray-900\">\n      <div className=\"flex flex-col items-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n            <Link\n              to=\"/auth/logout\"\n              className=\"bg-red-600 text-white text-center block w-full rounded-md p-3\"\n            >\n              Logout\n            </Link>\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n              Welcome to Your Dashboard\n            </h1>\n            <p className=\"space-y-4 md:space-y-6\">\n              <span className=\"text-gray-900 dark:text-white\">\n                You are now logged in and viewing your dashboard.\n              </span>\n            </p>\n            <pre className=\"text-black dark:text-white\">\n              <code>{JSON.stringify({ user }, null, 2)}</code>\n            </pre>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
  },
  {
    "fileName": "_site._index.tsx",
    "path": "/app/routes/_site._index.tsx",
    "content": "import type { ActionFunctionArgs, MetaFunction } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport auth from \"../auth.server\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"New Remix App\" }, { name: \"description\", content: \"Welcome to Remix!\" }];\n};\n\nexport async function loader({ request }: ActionFunctionArgs) {\n  const session = await auth.getSession(request);\n  return { user: session.get(\"user\") };\n}\n\nexport default function Index() {\n  const loaderData = useLoaderData<typeof loader>();\n  const isAuthenticated = Boolean(loaderData.user);\n\n  return (\n    <>\n      <section className=\"w-full py-12\">\n        <div className=\"px-4 md:px-6 flex flex-col items-center space-y-4\">\n          <div className=\"w-full max-w-[700px] mx-auto text-center space-y-4\">\n            <h1 className=\"text-3xl font-bold tracking-tighter sm:text-5xl\">Remix-Breeze</h1>\n            <p className=\"text-gray-500 md:text-xl dark:text-gray-400\">\n              Give yourself the toolkit to stop configuring and start innovating. Securely build,\n              deploy, and scale the best web experiences with Remix.\n            </p>\n          </div>\n          {!isAuthenticated ? (\n            <div className=\"flex flex-col gap-2 min-[400px]:flex-row\">\n              <Link\n                className=\"inline-flex h-10 items-center justify-center rounded-md bg-gray-900 px-8 text-sm font-medium text-gray-50 shadow transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300\"\n                to=\"/auth/login\"\n              >\n                Login\n              </Link>\n              <Link\n                className=\"inline-flex h-10 items-center justify-center rounded-md border border-gray-200 bg-black text-white px-8 text-sm font-medium shadow-sm\"\n                to=\"/auth/register\"\n              >\n                Register\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <p>\n                You are logged in as <strong>{loaderData.user?.email}</strong>\n              </p>\n              <div className=\"flex flex-col gap-2 min-[400px]:flex-row\">\n                <Link\n                  className=\"mt-4 w-full text-center p-2 px-8 text-sm font-medium text-white bg-blue-600 rounded-md shadow\"\n                  to=\"/dashboard\"\n                >\n                  Go to Dashboard\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      </section>\n    </>\n  );\n}\n"
  },
  {
    "fileName": "_site.auth.forgot-password.tsx",
    "path": "/app/routes/_site.auth.forgot-password.tsx",
    "content": "import type { ActionFunctionArgs, MetaFunction } from \"@remix-run/node\";\nimport { Form, redirect, useActionData } from \"@remix-run/react\";\nimport auth from \"../auth.server\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"Forgot Password\" }, { name: \"description\", content: \"Welcome to Remix!\" }];\n};\n\n// Mock function to send a password reset email. you should replace this with your own email sending function.\nfunction sendPasswordResetEmail({ to, resetLink }: { to: string; resetLink: string }) {\n  try {\n    console.log(\"Sending password reset email to\", to, \"with reset link\", resetLink);\n    // sendTransactionEmail({ to, subject: \"Password Reset\", html: `<a href=\"${resetLink}\">Reset your password</a>` });\n    return { error: null };\n  } catch (error) {\n    return { error: { message: \"Error sending email\", code: \"send_email_error\" } };\n  }\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  /**\n   * Sending a password reset link\n   */\n  const formData = await request.formData();\n  const email = formData.get(\"email\") as string;\n\n  const generateTokenResult = await auth.generatePasswordResetToken(email, {\n    expiresAfterMinutes: 10,\n  });\n  if (generateTokenResult.error) return { error: generateTokenResult.error };\n\n  const url = new URL(request.url);\n  const baseUrl = `${url.protocol}//${url.host}`;\n  const resetLink = `${baseUrl}/auth/reset-password?token=${generateTokenResult.token}&email=${email}`;\n  const { error: emailError } = await sendPasswordResetEmail({ to: email, resetLink });\n  if (emailError) return { error: emailError };\n\n  let redirectUrl = `/auth/reset-password-email-sent?email=${encodeURIComponent(email)}`;\n  // In demo mode, we will append the reset link to the redirect URL for demo purposes.\n  // You should remove this in your production code and implement the email sending above\n  // to send the password reset link to the user's email.\n  if (process.env.IS_DEMO_MODE) {\n    redirectUrl += `&reset_link_for_demo_purpose=${encodeURIComponent(resetLink)}`;\n  }\n\n  return redirect(redirectUrl);\n\n  /**\n   * You can also use the following code to send a password reset link more easily.\n   * Make sure you setup the \"sendResetPasswordEmail\" function in your\n   * auth.server.ts file so that password reset emails can be sent.\n   */\n  //   return auth.sendPasswordResetLink(request, {\n  //     expireLinkAfterMinutes: 15,\n  //     onSuccessRedirectTo: \"/auth/reset-password-email-sent\",\n  //   });\n}\n\nexport default function ForgotPassword() {\n  const actionData = useActionData<typeof action>();\n  const hasError = Boolean(actionData?.error);\n\n  return (\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n            {hasError && (\n              <div\n                className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\n                role=\"alert\"\n              >\n                <strong className=\"font-bold\">Error!</strong>\n                <span className=\"block sm:inline\"> {actionData?.error.message}</span>\n              </div>\n            )}\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n              Get a password reset link\n            </h1>\n            <Form method=\"post\" className=\"space-y-4 md:space-y-6\">\n              <div>\n                <label\n                  htmlFor=\"email\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  Your email\n                </label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  placeholder=\"name@company.com\"\n                  required\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800\"\n              >\n                Send password reset link\n              </button>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
  },
  {
    "fileName": "_site.auth.login.tsx",
    "path": "/app/routes/_site.auth.login.tsx",
    "content": "import type { ActionFunctionArgs, MetaFunction } from \"@remix-run/node\";\nimport auth from \"../auth.server\";\nimport { Form, useActionData } from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"Login\" }, { name: \"description\", content: \"Welcome to Remix!\" }];\n};\n\nexport async function action({ request }: ActionFunctionArgs) {\n  return auth.authenticateWithCredentials(request, {\n    redirectTo: \"/dashboard\",\n  });\n}\n\nexport async function loader({ request }: ActionFunctionArgs) {\n  return auth.redirectIfAuthenticated(request, {\n    to: \"/dashboard\",\n  });\n}\n\nexport default function Login() {\n  const data = useActionData<typeof action>();\n  const hasError = Boolean(data?.error);\n\n  return (\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n            {hasError && (\n              <div\n                className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\n                role=\"alert\"\n              >\n                <strong className=\"font-bold\">Error!</strong>\n                <span className=\"block sm:inline\"> {data?.error.message}</span>\n              </div>\n            )}\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n              Sign in to your account\n            </h1>\n            <Form method=\"post\" className=\"space-y-4 md:space-y-6\">\n              <div>\n                <label\n                  htmlFor=\"email\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  Your email\n                </label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  placeholder=\"name@company.com\"\n                  required\n                />\n              </div>\n              <div>\n                <label\n                  htmlFor=\"password\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  Password\n                </label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"••••••••\"\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5\"\n                  required\n                />\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <a\n                  href=\"/auth/forgot-password\"\n                  className=\"text-sm font-medium text-primary-600 hover:underline dark:text-gray-400\"\n                >\n                  Forgot password?\n                </a>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800\"\n              >\n                Sign in\n              </button>\n              <p className=\"text-sm font-light text-gray-500 dark:text-gray-400\">\n                Don’t have an account yet?{\" \"}\n                <a\n                  href=\"/auth/register\"\n                  className=\"font-medium text-primary-600 hover:underline dark:text-primary-500\"\n                >\n                  Sign up\n                </a>\n              </p>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
  },
  {
    "fileName": "_site.auth.logout.tsx",
    "path": "/app/routes/_site.auth.logout.tsx",
    "content": "import { ActionFunctionArgs } from \"@remix-run/node\";\nimport auth from \"../auth.server\";\n\nexport async function loader({ request }: ActionFunctionArgs) {\n  return auth.logout(request, {\n    redirectTo: \"/\",\n  });\n}\n"
  },
  {
    "fileName": "_site.auth.register.tsx",
    "path": "/app/routes/_site.auth.register.tsx",
    "content": "import type { ActionFunctionArgs, LoaderFunctionArgs, MetaFunction } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport auth from \"../auth.server\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"Register\" }, { name: \"description\", content: \"Welcome to Remix!\" }];\n};\n\nexport async function action({ request }: ActionFunctionArgs) {\n  return auth.registerUser(request, {\n    authenticateAndRedirectTo: \"/dashboard\",\n  });\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  await auth.redirectIfAuthenticated(request, { to: \"/dashboard\" });\n  return null;\n}\n\nexport default function Register() {\n  const actionData = useActionData<typeof action>();\n  const hasError = actionData?.error;\n\n  return (\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n            {hasError && (\n              <div\n                className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\n                role=\"alert\"\n              >\n                <strong className=\"font-bold\">Error!</strong>\n                <span className=\"block sm:inline\"> {actionData.error.message}</span>\n              </div>\n            )}\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n              Register for an account\n            </h1>\n            <Form method=\"post\" className=\"space-y-4 md:space-y-6\">\n              <div>\n                <label\n                  htmlFor=\"firstName\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  First Name\n                </label>\n                <input\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  placeholder=\"Jhon\"\n                  required\n                />\n              </div>\n              <div>\n                <label\n                  htmlFor=\"lastName\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  Last Name\n                </label>\n                <input\n                  name=\"lastName\"\n                  id=\"lastName\"\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  placeholder=\"Doe\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"email\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  Your email\n                </label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  placeholder=\"name@company.com\"\n                  required\n                />\n              </div>\n              <div>\n                <label\n                  htmlFor=\"password\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  Password\n                </label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"••••••••\"\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  required\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800\"\n              >\n                Register\n              </button>\n              <p className=\"text-sm font-light text-gray-500 dark:text-gray-400\">\n                Already have an account?{\" \"}\n                <a\n                  href=\"/auth/login\"\n                  className=\"font-medium text-primary-600 hover:underline dark:text-primary-500\"\n                >\n                  Sign in\n                </a>\n              </p>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
  },
  {
    "fileName": "_site.auth.reset-password-email-sent.tsx",
    "path": "/app/routes/_site.auth.reset-password-email-sent.tsx",
    "content": "import type { LoaderFunctionArgs, MetaFunction } from \"@remix-run/node\";\nimport { Link, json, useLoaderData } from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Reset Password Email Sent\" },\n    { name: \"description\", content: \"Welcome to Remix!\" },\n  ];\n};\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const url = new URL(request.url);\n  const email = url.searchParams.get(\"email\");\n  if (process.env.IS_DEMO_MODE) {\n    const resetLink = url.searchParams.get(\"reset_link_for_demo_purpose\");\n    return json({ resetLink, email });\n  }\n  return json({ resetLink: null, email });\n}\n\nexport default function ResetPasswordEmailSent() {\n  const { resetLink, email } = useLoaderData<typeof loader>();\n\n  return (\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n              Check Your Email\n            </h1>\n            <p className=\"space-y-4 md:space-y-6\">\n              <span className=\"text-gray-900 dark:text-white\">\n                We have sent you a password reset link to your email address{\" \"}\n                <strong>{email}</strong>. Please check your email.\n              </span>\n            </p>\n            {resetLink && (\n              <>\n                <p className=\"text-orange-500\">\n                  Note: for this demo app, the email will not actually be sent. Instead, you can use\n                  the link below to reset your password.\n                </p>\n                <Link to={resetLink || \"\"} className=\"text-blue-500 underline\">\n                  Reset My Password\n                </Link>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
  },
  {
    "fileName": "_site.auth.reset-password-success.tsx",
    "path": "/app/routes/_site.auth.reset-password-success.tsx",
    "content": "import type { MetaFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Password Reset Success\" },\n    { name: \"description\", content: \"Welcome to Remix!\" },\n  ];\n};\n\nexport default function PasswordResetSuccess() {\n  return (\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n              Password Reset Success!\n            </h1>\n            <p className=\"space-y-4 md:space-y-6\">\n              <span className=\"text-gray-900 dark:text-white\">\n                Your password has been successfully reset. You can now log in with your new\n                password.\n              </span>\n            </p>\n            <Link\n              to=\"/auth/login\"\n              className=\"text-white block p-2 w-full text-center rounded-md items-center bg-blue-600\"\n            >\n              Go to Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
  },
  {
    "fileName": "_site.auth.reset-password.tsx",
    "path": "/app/routes/_site.auth.reset-password.tsx",
    "content": "import type { ActionFunctionArgs, MetaFunction } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport auth from \"../auth.server\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"Reset Password\" }, { name: \"description\", content: \"Welcome to Remix!\" }];\n};\n\nexport async function action({ request }: ActionFunctionArgs) {\n  return auth.resetPassword(request, {\n    onSuccessRedirectTo: \"/auth/reset-password-success\",\n  });\n}\n\nexport async function loader({ request }: ActionFunctionArgs) {\n  const url = new URL(request.url);\n  const token = url.searchParams.get(\"token\") || \"\";\n  return auth.validatePasswordResetToken(token);\n}\n\nexport default function ResetPassword() {\n  const loaderData = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const isInvalidToken = loaderData.error;\n  console.log(\"loaderData\", loaderData);\n  console.log(\"actionData\", actionData);\n\n  if (isInvalidToken) {\n    return (\n      <section className=\"bg-gray-50 dark:bg-gray-900\">\n        <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n          <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n            <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n              <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n                Invalid or Expired Token\n              </h1>\n              <p className=\"space-y-4 md:space-y-6\">\n                <span className=\"text-gray-900 dark:text-white\">\n                  The token you provided is invalid or has expired. Please request a new password\n                  reset link.\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n            {actionData?.error && (\n              <div\n                className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\n                role=\"alert\"\n              >\n                <strong className=\"font-bold\">Error!</strong>\n                <span className=\"block sm:inline\"> {actionData.error.message}</span>\n              </div>\n            )}\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n              Reset your password\n            </h1>\n            <Form method=\"post\" className=\"space-y-4 md:space-y-6\">\n              <div>\n                <label\n                  htmlFor=\"newPassword\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  New Password\n                </label>\n                <input\n                  type=\"password\"\n                  name=\"newPassword\"\n                  id=\"newPpassword\"\n                  placeholder=\"••••••••\"\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  required\n                />\n              </div>\n              <div>\n                <label\n                  htmlFor=\"confirmPassword\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  Repeat Password\n                </label>\n                <input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  id=\"confirmPassword\"\n                  placeholder=\"••••••••\"\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  required\n                />\n              </div>\n              <input type=\"hidden\" name=\"token\" value={loaderData.tokenData.token} />\n              <button\n                type=\"submit\"\n                className=\"w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800\"\n              >\n                Reset Password\n              </button>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
  },
  {
    "fileName": "_site.auth.unauthorized.tsx",
    "path": "/app/routes/_site.auth.unauthorized.tsx",
    "content": "import type { MetaFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"Unauthorized\" }, { name: \"description\", content: \"Welcome to Remix!\" }];\n};\n\nexport default function Unauthorized() {\n  return (\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n              Stop! 🛑\n            </h1>\n            <p className=\"space-y-4 md:space-y-6\">\n              <span className=\"text-gray-900 dark:text-white\">\n                You are not authorized to view this page. Please log in as an admin to view this.\n              </span>\n            </p>\n            <Link\n              to=\"/\"\n              className=\"text-white block p-2 w-full text-center rounded-md items-center bg-blue-600\"\n            >\n              Go Back\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
  },
  {
    "fileName": "auth.server.ts",
    "path": "/app/auth.server.ts",
    "content": "import { createBreezeAuth, PrismaAdapter } from \"@remix-breeze/auth\";\nimport { prisma } from \"../prisma/client\";\n\nconst auth = createBreezeAuth({\n  databaseAdapter: PrismaAdapter(prisma),\n  cookie: {\n    name: \"__session\",\n    secret: process.env.COOKIE_SECRET!,\n    maxAge: 30 * 24 * 60 * 60, // 30 days\n  },\n});\n\nauth.use({ type: \"credentials\" });\n\nexport default auth;\n"
  }
]